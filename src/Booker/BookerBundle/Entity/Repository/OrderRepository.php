<?php

namespace Booker\BookerBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * OrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderRepository extends EntityRepository
{
    public function getOrders($date, $roomId = null)
    {
                $qb = $this->createQueryBuilder('o')
                   ->select('o.id', 'u.id', 'u.username')
                   ->innerJoin('o.user', 'u')
                   ->where('o.date = :date')
                   ->setParameter('date', $date);
        
        if ( false === is_null($roomId ))
            $qb->innerJoin('o.room', 'r')
               ->andWhere('r.id = :roomId')
               ->setParameter('roomId', $roomId);
        
        return $qb->getQuery()
                  ->getResult();
    }
    
    public function getOrder($id)
    {
        return $this->find($id);
    }
    
    public function getOrderByTime($time, $roomId)
    {
        $qb = $this->createQueryBuilder('o')
                   ->select('o')
                   ->innerJoin('o.room', 'r')
                   ->where('o.time = :time')
                   ->andWhere('r.id = :roomId')
                   ->setParameter('time', $time)
                   ->setParameter('roomId', $roomId);
        return $qb->getQuery()
                  ->getArrayResult();
    }
    
    public function getOrderByUser($date, $time, $userId)
    {
        $qb = $this->createQueryBuilder('o')
                   ->select('o')
                   ->innerJoin('o.user', 'u')
                   ->where('o.time = :time')
                   ->andWhere('o.date = :date')
                   ->andWhere('u.id = :userId')
                   ->setParameter('time', $time)
                   ->setParameter('date', $date)
                   ->setParameter('userId', $userId);
        return $qb->getQuery()
                  ->getArrayResult();
    }
}
